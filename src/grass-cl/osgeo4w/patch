diff --git a/lib/gis/gisinit.c b/lib/gis/gisinit.c
index 8f4a4c798..f75a74d7c 100644
--- a/lib/gis/gisinit.c
+++ b/lib/gis/gisinit.c
@@ -49,12 +49,14 @@ void G__gisinit(const char *version, const char *pgm)
 
     G_set_program_name(pgm);
 
+#ifndef _WIN32
     /* verify version of GRASS headers (and anything else in include) */
     if (strcmp(version, GIS_H_VERSION) != 0)
 	G_fatal_error(_("Module built against version %s but "
 			"trying to use version %s. "
 			"You need to rebuild GRASS GIS or untangle multiple installations."),
                         version, GIS_H_VERSION);
+#endif
     
     /* Make sure location and mapset are set */
     G_location_path();
diff --git a/mswindows/osgeo4w/env.bat.tmpl b/mswindows/osgeo4w/env.bat.tmpl
index 157d622b3..6f3441b70 100644
--- a/mswindows/osgeo4w/env.bat.tmpl
+++ b/mswindows/osgeo4w/env.bat.tmpl
@@ -2,14 +2,13 @@ REM
 REM Environmental variables for GRASS OSGeo4W installer
 REM
 
-call "%OSGEO4W_ROOT%\bin\py3_env.bat"
-
 set GISBASE=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@
 
 REM Uncomment if you want to use Bash instead of Cmd
 REM Note that msys package must be also installed
 REM set GRASS_SH=%OSGEO4W_ROOT%\apps\msys\bin\sh.exe
 
+set PYTHONPATH=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@\etc\python;%PYTHONPATH%
 set GRASS_PYTHON=%OSGEO4W_ROOT%\bin\python3.exe
 set GRASS_PROJSHARE=%OSGEO4W_ROOT%\share\proj
 
diff --git a/mswindows/osgeo4w/mklibs.sh b/mswindows/osgeo4w/mklibs.sh
index 00a597afa..dafc2e0fe 100755
--- a/mswindows/osgeo4w/mklibs.sh
+++ b/mswindows/osgeo4w/mklibs.sh
@@ -1,31 +1,24 @@
 #!/bin/sh
 
 set -e
+set -x
 
-if [ -z "$OSGEO4W_POSTFIX" ]; then
-    OSGEO4W_POSTFIX=""
-fi
-
-if [ "$OSGEO4W_POSTFIX" != "64" ]; then
-    MACHINE=x86
+if [ "$CI" ] ; then
+	DUMPBIN_PATH=$(cygpath -ua "C:/Program Files (x86)\Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.29.30133/bin/HostX64/x64/")
+	export PATH="${DUMPBIN_PATH}:$PATH"
+	# dumpbin in GH actions does not support options starting with "-"
+	DUMPBIN_EXPORT="/EXPORTS"
 else
-    MACHINE=x64
+	DUMPBIN_EXPORT="-exports"
 fi
 
-PROGRAMFILES="/c/Program Files (x86)"
-VSDIR="$PROGRAMFILES/Microsoft Visual Studio 14.0"
-# add example for MS Visual Studio 2017 Community 64 bit
-# VSDIR="$PROGRAMFILES/Microsoft Visual Studio/2017/Community"
-PATH="$VSDIR/Common7/IDE:$PATH"
-PATH="$VSDIR/VC/bin:$PATH"
-# add example for MS Visual Studio 2017 Community 64 bit
-# PATH="$VSDIR/VC/Tools/MSVC/14.12.25827/bin/Hostx64/x64:$PATH"
-PATH="$VSDIR/Common7/Tools:$PATH"
-PATH="$PATH:/c/OSGeo4W${OSGEO4W_POSTFIX}/bin"
-export PATH
 
 [ -d mswindows/osgeo4w/vc ] || mkdir mswindows/osgeo4w/vc
 
+if [ -n "$VCPATH" ]; then
+	PATH=$PATH:$VCPATH
+fi
+
 for dllfile in "$@"; do
 	dlldir=${dllfile%/*}
 	dllfile=${dllfile##*/}
@@ -38,11 +31,12 @@ for dllfile in "$@"; do
 
  	echo "$dllfile => $dllname"
 
-	(cd $dlldir; dumpbin -exports $dllfile) |
+	(cd $dlldir; dumpbin "$DUMPBIN_EXPORT" $dllfile) |
 		sed -nf mswindows/osgeo4w/mklibs.sed |
 		egrep -v "^[	 ]*(_+IMPORT_DESCRIPTOR_.*|_+NULL_IMPORT_DESCRIPTOR)$" >mswindows/osgeo4w/vc/${defname%$VERSION}
 
 	(cd mswindows/osgeo4w/vc ;
-	    lib -nologo -def:${defname} -subsystem:windows -machine:${MACHINE}
+	    lib -nologo -def:${defname} -subsystem:windows -machine:x64
 	    lib -nologo $libname || exit)
 done
+
@@ -265,19 +244,30 @@ if [ -n "$PACKAGE_PATCH" ]; then
     unix2dos etc/postinstall/grass${PACKAGE_POSTFIX}.bat
     unix2dos etc/preremove/grass${PACKAGE_POSTFIX}.bat
 
+    openmp_dll=../msys64/mingw64/bin/libomp.dll
+    blas_dll=../msys64/mingw64/bin/libblas.dll
+    lapack_dll=../msys64/mingw64/bin/liblapack.dll
+    lapack_gcc=../msys64/mingw64/bin/libgcc_s_dw2-1.dll
     # copy dependencies (TODO: to be reduced)
     cp -uv $DLLS apps/grass/grass$POSTFIX/bin
-    cp -uv /mingw${MINGW_POSTFIX}/etc/fonts/fonts.conf \
-	apps/grass/grass$POSTFIX/etc
+    if [ -f "$openmp_dll" ] ; then echo "Copying libomp.dll"; fi
+    if [ -f "$openmp_dll" ] ; then cp -uv "$openmp_dll" apps/grass/grass$POSTFIX/bin/ ; fi
+
+    if [ -f "$blas_dll" ] ; then echo "Copying libblas.dll"; fi
+    if [ -f "$blas_dll" ] ; then cp -uv "$blas_dll" apps/grass/grass$POSTFIX/bin/ ; fi
+
+    if [ -f "$lapack_dll" ] ; then echo "Copying liblapack.dll"; fi
+    if [ -f "$lapack_dll" ] ; then cp -uv "$lapack_dll" apps/grass/grass$POSTFIX/bin/ ; fi
+    if [ -f "$lapack_gcc" ] ; then cp -uv "$lapack_gcc" apps/grass/grass$POSTFIX/bin/ ; fi
+    cp -uv /mingw64/etc/fonts/fonts.conf apps/grass/grass$POSTFIX/etc
 
     # creating grass package
     /bin/tar -cjf $PDIR/grass$PACKAGE_POSTFIX-$VERSION-$PACKAGE_PATCH.tar.bz2 \
-	apps/grass/grass$POSTFIX \
-	bin/${GRASS_EXECUTABLE}.bat \
-	bin/python-${GRASS_EXECUTABLE}.bat \
-	etc/postinstall/grass${PACKAGE_POSTFIX}.bat \
-	etc/preremove/grass${PACKAGE_POSTFIX}.bat
-
+    apps/grass/grass$POSTFIX \
+    bin/${GRASS_EXECUTABLE}.bat \
+    bin/python-${GRASS_EXECUTABLE}.bat \
+    etc/postinstall/grass${PACKAGE_POSTFIX}.bat \
+    etc/preremove/grass${PACKAGE_POSTFIX}.bat
 fi
 
 log
diff --git a/mswindows/osgeo4w/postinstall.bat b/mswindows/osgeo4w/postinstall.bat
index 0efcf3477..e9f75cecf 100644
--- a/mswindows/osgeo4w/postinstall.bat
+++ b/mswindows/osgeo4w/postinstall.bat
@@ -1,27 +1,29 @@
-set ICON=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@\gui\icons\grass_osgeo.ico
-set BATCH=%OSGEO4W_ROOT%\bin\@GRASS_EXECUTABLE@.bat
-textreplace -std -t "%BATCH%"
-textreplace -std -t "%OSGEO4W_ROOT%"\apps\grass\grass@POSTFIX@\etc\fontcap
-
-if not %OSGEO4W_MENU_LINKS%==0 xxmklink "%OSGEO4W_STARTMENU%\GRASS GIS @VERSION@.lnk" "%BATCH%"  "--gui" \ "Launch GRASS GIS @VERSION@" 1 "%ICON%" 
-if not %OSGEO4W_DESKTOP_LINKS%==0 xxmklink "%OSGEO4W_DESKTOP%\GRASS GIS @VERSION@.lnk" "%BATCH%"  "--gui" \ "Launch GRASS GIS @VERSION@" 1 "%ICON%" 
-
-rem run g.mkfontcap outside a GRASS session during
-rem an OSGeo4W installation for updating paths to fonts
-
-rem set gisbase
-set GISBASE=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@
-
-rem set path to freetype dll and its dependencies
-set FREETYPEBASE=%OSGEO4W_ROOT%\bin;%OSGEO4W_ROOT%\apps\msys\bin;%GISBASE%\lib
-
-rem set dependencies to path
-set PATH=%FREETYPEBASE%;%PATH%
-
-rem GISRC must be set
-set GISRC=dummy
-
-rem run g.mkfontcap outside a GRASS session
-"%GISBASE%\bin\g.mkfontcap.exe" -o
-
-del "%BATCH%.tmpl
+set ICON=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@\gui\icons\grass_osgeo.ico
+set BATCH=%OSGEO4W_ROOT%\bin\@GRASS_EXECUTABLE@.bat
+textreplace -std -t "%BATCH%"
+textreplace -std -t "%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@\etc\fontcap"
+
+for /F "tokens=* USEBACKQ" %%F IN (`getspecialfolder Documents`) do set DOCUMENTS=%%F
+
+if not %OSGEO4W_MENU_LINKS%==0 xxmklink "%OSGEO4W_STARTMENU%\GRASS GIS @VERSION@.lnk" "%BATCH%"  "--gui" "%DOCUMENTS%" "Launch GRASS GIS @VERSION@" 1 "%ICON%" 
+if not %OSGEO4W_DESKTOP_LINKS%==0 xxmklink "%OSGEO4W_DESKTOP%\GRASS GIS @VERSION@.lnk" "%BATCH%"  "--gui" "%DOCUMENTS%" "Launch GRASS GIS @VERSION@" 1 "%ICON%" 
+
+rem run g.mkfontcap outside a GRASS session during
+rem an OSGeo4W installation for updating paths to fonts
+
+rem set gisbase
+set GISBASE=%OSGEO4W_ROOT%\apps\grass\grass@POSTFIX@
+
+rem set path to freetype dll and its dependencies
+set FREETYPEBASE=%OSGEO4W_ROOT%\bin;%OSGEO4W_ROOT%\apps\msys\bin;%GISBASE%\lib
+
+rem set dependencies to path
+set PATH=%FREETYPEBASE%;%PATH%
+
+rem GISRC must be set
+set GISRC=dummy
+
+rem run g.mkfontcap outside a GRASS session
+"%GISBASE%\bin\g.mkfontcap.exe" -o
+
+del "%BATCH%.tmpl
diff --git a/python/grass/ctypes/loader.py b/python/grass/ctypes/loader.py
index 9fdca092d..e0f28a8e0 100644
--- a/python/grass/ctypes/loader.py
+++ b/python/grass/ctypes/loader.py
@@ -238,6 +238,12 @@ class _WindowsLibrary(object):
 class WindowsLibraryLoader(LibraryLoader):
     name_formats = ["%s.dll", "lib%s.dll"]
 
+    def __init__(self):
+        super().__init__()
+        for p in os.getenv("PATH").split(";"):
+            if os.path.exists(p) and hasattr(os, 'add_dll_directory'):
+                os.add_dll_directory(p)
+
     def load(self, path):
         return _WindowsLibrary(path)
 
diff --git a/configure b/configure
index 6566a7639..2079df492 100755
--- a/configure
+++ b/configure
@@ -7131,8 +7131,12 @@ fi
   fi
 
   if test "$PDAL_CONFIG" != "" ; then
+    if test "$MINGW32" = yes ; then
+        PDAL_CPPFLAGS="-DWIN32 -D_WINDOWS -std=c++11"
+    else
+        PDAL_CPPFLAGS=`"$PDAL_CONFIG" --cxxflags`
+    fi
     PDAL_LIBS=`"$PDAL_CONFIG" --libs`
-    PDAL_CPPFLAGS=`"$PDAL_CONFIG" --cxxflags`
     PDAL_INC=`"$PDAL_CONFIG" --includes`
     USE_PDAL=1
   fi
